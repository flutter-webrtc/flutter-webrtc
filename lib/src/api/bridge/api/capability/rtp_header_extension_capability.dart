// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import '../../frb_generated.dart';
import '../transceiver/direction.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`, `from`

/// Representation of capabilities/preferences of an implementation for a header
/// extension of [`RtpCapabilities`].
class RtpHeaderExtensionCapability {
  /// [URI] of this extension, as defined in [RFC 8285].
  ///
  /// [RFC 8285]: https://tools.ietf.org/html/rfc8285
  /// [URI]: https://en.wikipedia.org/wiki/Uniform_Resource_Identifier
  final String uri;

  /// Preferred value of ID that goes in the packet.
  final int? preferredId;

  /// If [`true`], it's preferred that the value in the header is encrypted.
  final bool preferredEncrypted;

  /// Direction of the extension.
  ///
  /// [`RtpTransceiverDirection::Stopped`] value is only used with
  /// `RtpTransceiverInterface::SetHeaderExtensionsToNegotiate()` and
  /// `SetHeaderExtensionsToNegotiate()`.
  final RtpTransceiverDirection direction;

  const RtpHeaderExtensionCapability({
    required this.uri,
    this.preferredId,
    required this.preferredEncrypted,
    required this.direction,
  });

  @override
  int get hashCode =>
      uri.hashCode ^
      preferredId.hashCode ^
      preferredEncrypted.hashCode ^
      direction.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RtpHeaderExtensionCapability &&
          runtimeType == other.runtimeType &&
          uri == other.uri &&
          preferredId == other.preferredId &&
          preferredEncrypted == other.preferredEncrypted &&
          direction == other.direction;
}
