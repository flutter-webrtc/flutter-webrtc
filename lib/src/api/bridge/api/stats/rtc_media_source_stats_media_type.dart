// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;

import '../../frb_generated.dart';

part 'rtc_media_source_stats_media_type.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `from`

@freezed
sealed class RtcMediaSourceStatsMediaType with _$RtcMediaSourceStatsMediaType {
  const RtcMediaSourceStatsMediaType._();

  /// Video source fields.
  const factory RtcMediaSourceStatsMediaType.rtcVideoSourceStats({
    /// Width (in pixels) of the last frame originating from the source.
    /// Before a frame has been produced this attribute is missing.
    int? width,

    /// Height (in pixels) of the last frame originating from the source.
    /// Before a frame has been produced this attribute is missing.
    int? height,

    /// Total number of frames originating from this source.
    int? frames,

    /// Number of frames originating from the source, measured during the
    /// last second. For the first second of this object's lifetime this
    /// attribute is missing.
    double? framesPerSecond,
  }) = RtcMediaSourceStatsMediaType_RtcVideoSourceStats;

  /// Audio source fields.
  const factory RtcMediaSourceStatsMediaType.rtcAudioSourceStats({
    /// Audio level of the media source.
    double? audioLevel,

    /// Audio energy of the media source.
    double? totalAudioEnergy,

    /// Audio duration of the media source.
    double? totalSamplesDuration,

    /// Only exists when the [MediaStreamTrack][1] is sourced from a
    /// microphone where echo cancellation is applied.
    ///
    /// [1]: https://w3.org/TR/mediacapture-streams#mediastreamtrack
    double? echoReturnLoss,

    /// Only exists when the [MediaStreamTrack][1] is sourced from a
    /// microphone where echo cancellation is applied.
    ///
    /// [1]: https://w3.org/TR/mediacapture-streams#mediastreamtrack
    double? echoReturnLossEnhancement,
  }) = RtcMediaSourceStatsMediaType_RtcAudioSourceStats;
}
